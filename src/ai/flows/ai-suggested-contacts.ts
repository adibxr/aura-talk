// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview This file defines a Genkit flow for searching contacts and suggesting new ones.
 *
 * - searchContactsAndSuggest - A function that searches contacts based on a query and suggests new contacts.
 * - SearchContactsAndSuggestInput - The input type for the searchContactsAndSuggest function.
 * - SearchContactsAndSuggestOutput - The return type for the searchContactsAndSuggest function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SearchContactsAndSuggestInputSchema = z.object({
  query: z.string().describe('The search query to find contacts.'),
  existingContacts: z.array(z.string()).describe('List of existing contact usernames.'),
});

export type SearchContactsAndSuggestInput = z.infer<typeof SearchContactsAndSuggestInputSchema>;

const SearchContactsAndSuggestOutputSchema = z.object({
  searchResults: z.array(z.string()).describe('List of contact usernames that match the search query.'),
  suggestedContacts: z.array(z.string()).describe('List of suggested contact usernames to add, including similar usernames or users with common interests.'),
});

export type SearchContactsAndSuggestOutput = z.infer<typeof SearchContactsAndSuggestOutputSchema>;

export async function searchContactsAndSuggest(input: SearchContactsAndSuggestInput): Promise<SearchContactsAndSuggestOutput> {
  return searchContactsAndSuggestFlow(input);
}

const searchContactsAndSuggestPrompt = ai.definePrompt({
  name: 'searchContactsAndSuggestPrompt',
  input: {
    schema: SearchContactsAndSuggestInputSchema,
  },
  output: {
    schema: SearchContactsAndSuggestOutputSchema,
  },
  prompt: `You are a helpful assistant designed to search contacts and suggest new contacts.

  Search for contacts based on the user's query. If the search doesn't find an exact match, suggest other users who might be relevant based on similar usernames or common interests.
  The user has the following existing contacts: {{{existingContacts}}}.

  Here's the search query: {{{query}}}.

  Return the search results and suggested contacts in the following format:
  {
    "searchResults": ["username1", "username2"],
    "suggestedContacts": ["username3", "username4"]
  }
  Do not include existing contacts in the suggested contacts.
`,
});

const searchContactsAndSuggestFlow = ai.defineFlow(
  {
    name: 'searchContactsAndSuggestFlow',
    inputSchema: SearchContactsAndSuggestInputSchema,
    outputSchema: SearchContactsAndSuggestOutputSchema,
  },
  async input => {
    const {output} = await searchContactsAndSuggestPrompt(input);
    return output!;
  }
);
